<% layout("layout") %>

<h2 class="form-title">Report an Emergency</h2>
<div class="emergency-alert">
    <p><strong>Important:</strong> For immediate assistance in life-threatening situations, please call emergency services directly.</p>
</div>

<form action="/citizen/emergency" method="POST" class="emergency-form">
    <label for="type" class="form-label">Emergency Type:</label>
    <select id="type" name="type" onchange="toggleOtherTypeField()" class="form-input">
        <option value="Fire">Fire</option>
        <option value="Accident">Road Accident</option>
        <option value="Flooding">Flooding</option>
        <option value="Building Collapse">Building Collapse</option>
        <option value="Medical">Medical Emergency</option>
        <option value="Other">Other</option>
    </select>

    <div id="otherTypeField" style="display: none;">
        <label for="otherType" class="form-label">Please specify the emergency type:</label>
        <input 
            type="text" 
            id="otherType" 
            name="otherType" 
            placeholder="e.g., Gas Leak, Power Line Down" 
            class="form-input"
        >
    </div>

    <label for="details" class="form-label">Details:</label>
    <textarea 
        id="details" 
        name="details" 
        rows="5" 
        placeholder="Provide details about the emergency..." 
        required
        class="form-input"
    ></textarea>

    <label for="location" class="form-label">Location:</label>
    <input 
        type="text" 
        id="location" 
        name="location" 
        placeholder="Enter the location of the emergency" 
        required
        class="form-input"
    >
    <button type="button" onclick="getCurrentLocation()" class="geo-button">Get Current Location</button>

    <!-- Map Container -->
    <div id="map-container">
        <div id="map" style="height: 300px; margin-top: 15px; border-radius: 5px;"></div>
        <p class="map-help">Click on the map to set the exact emergency location</p>
    </div>

    <button type="submit" class="emergency-submit">Submit Emergency Report</button>
</form>

<!-- OpenStreetMap and Leaflet -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
<script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
<!-- Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

<script>
    // Map variables
    let map;
    let marker;
    let geocoder;
    
    // Initialize the map
    function initMap() {
        try {
            console.log("Initializing emergency map");
            // Default center (India)
            const defaultCenter = [20.5937, 78.9629];
            
            // Create a map with emergency styling
            map = L.map('map').setView(defaultCenter, 5);
            
            // Add OpenStreetMap tile layer
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);
            
            // Add search control for emergencies
            const searchControl = L.Control.geocoder({
                defaultMarkGeocode: false,
                placeholder: "Search for emergency location...",
                errorMessage: "Location not found"
            }).addTo(map);
            
            // Handle search results
            searchControl.on('markgeocode', function(e) {
                const latlng = e.geocode.center;
                placeMarker(latlng);
                map.setView(latlng, 15);
                
                // Update location input field
                document.getElementById("location").value = e.geocode.name;
            });
            
            // Add click listener to the map
            map.on('click', function(e) {
                console.log("Emergency map clicked at:", e.latlng);
                placeMarker(e.latlng);
                getAddressFromLatLng(e.latlng);
            });
            
            console.log("Emergency map initialized successfully");
        } catch (e) {
            console.error("Error initializing emergency map:", e);
        }
    }
    
    // Place a marker at the specified position
    function placeMarker(latlng) {
        if (marker) {
            // If marker exists, just move it
            marker.setLatLng(latlng);
        } else {
            // Create a new marker with emergency icon
            const emergencyIcon = L.icon({
                iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',
                shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowSize: [41, 41]
            });
            
            marker = L.marker(latlng, {
                draggable: true,
                icon: emergencyIcon
            }).addTo(map);
            
            // Add event listener for marker drag
            marker.on('dragend', function() {
                const newPos = marker.getLatLng();
                console.log("Emergency marker dragged to:", newPos);
                getAddressFromLatLng(newPos);
            });
        }
        
        // Center the map on the marker
        map.setView(latlng, map.getZoom());
    }
    
    // Get the user's current location
    function getCurrentLocation() {
        if (navigator.geolocation) {
            document.getElementById("location").value = "Fetching your location...";
            
            navigator.geolocation.getCurrentPosition(
                function(position) {
                    const lat = position.coords.latitude;
                    const lng = position.coords.longitude;
                    const latlng = L.latLng(lat, lng);
                    
                    console.log("Got emergency location:", lat, lng);
                    
                    // Place marker at current location
                    placeMarker(latlng);
                    
                    // Zoom in closer to the location
                    map.setView(latlng, 16);
                    
                    // Get address for the location
                    getAddressFromLatLng(latlng);
                },
                function(error) {
                    console.error("Error getting emergency location:", error);
                    document.getElementById("location").value = "Unable to access your location.";
                    alert("Error getting your location. Please enable location services in your browser for emergency reporting.");
                },
                {
                    enableHighAccuracy: true,
                    timeout: 10000,
                    maximumAge: 0
                }
            );
        } else {
            document.getElementById("location").value = "Geolocation is not supported by this browser.";
            alert("Your browser doesn't support geolocation services. Please enter the location manually.");
        }
    }
    
    // Get address from latitude and longitude
    function getAddressFromLatLng(latlng) {
        console.log("Getting address for emergency:", latlng);
        
        // Update location input with coordinates while we fetch the address
        document.getElementById("location").value = `${latlng.lat.toFixed(6)}, ${latlng.lng.toFixed(6)}`;
        
        // Now try to get the actual address using direct Nominatim API
        fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latlng.lat}&lon=${latlng.lng}&zoom=18&addressdetails=1`)
            .then(response => response.json())
            .then(data => {
                if (data && data.display_name) {
                    document.getElementById("location").value = data.display_name;
                }
            })
            .catch(error => {
                console.error("Error reverse geocoding for emergency:", error);
                // Keep the coordinates that we've already set if there's an error
            });
    }
    
    // Search for a location when the location input changes
    function searchLocation() {
        const input = document.getElementById("location").value;
        
        if (input.trim() === "") return;
        
        console.log("Searching for emergency location:", input);
        
        // Use Nominatim API to geocode the input address
        fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(input)}&limit=1`)
            .then(response => response.json())
            .then(data => {
                if (data && data.length > 0) {
                    const result = data[0];
                    const latlng = L.latLng(parseFloat(result.lat), parseFloat(result.lon));
                    
                    // Set marker at the found location
                    placeMarker(latlng);
                    
                    // Zoom in to the found location
                    map.setView(latlng, 16);
                    
                    console.log("Found emergency location:", result.display_name);
                } else {
                    console.log("No emergency location found for:", input);
                    alert("Location not found. Please try a different search term or use the map to pick a location.");
                }
            })
            .catch(error => {
                console.error("Error searching for emergency location:", error);
                alert("Error searching for location. Please try again or use the map to select a location.");
            });
    }

    // Toggle the visibility of the "Other" type input field
    function toggleOtherTypeField() {
        const typeSelect = document.getElementById("type");
        const otherTypeField = document.getElementById("otherTypeField");

        if (typeSelect.value === "Other") {
            otherTypeField.style.display = "block";
        } else {
            otherTypeField.style.display = "none";
        }
    }
    
    // Initialize map when the page loads
    document.addEventListener("DOMContentLoaded", function() {
        initMap();
        
        // Add input event listener for the location field
        const locationInput = document.getElementById("location");
        if (locationInput) {
            locationInput.addEventListener("blur", searchLocation);
            
            // Add enter key event listener for location search
            locationInput.addEventListener("keydown", function(event) {
                if (event.key === "Enter") {
                    event.preventDefault();
                    searchLocation();
                }
            });
        }
    });

    // Function to handle emergency form submission
    document.addEventListener('DOMContentLoaded', function() {
        const emergencyForm = document.querySelector('.emergency-form');
        if (emergencyForm) {
            emergencyForm.addEventListener('submit', function(e) {
                console.log('Submitting emergency form...');
                const type = document.getElementById('type').value;
                const details = document.getElementById('details').value;
                const location = document.getElementById('location').value;
                
                console.log('Emergency data:', { type, details, location });
                
                // Add notification
                alert(`Submitting emergency report: ${type} at ${location}`);
                // The form will be submitted normally after this
            });
        } else {
            console.error('Emergency form not found!');
        }
    });
</script>

<style>
    .form-title {
        text-align: center;
        font-size: 2em;
        color: #d9534f;
        margin-top: 20px;
    }
    
    .emergency-alert {
        background-color: #fff3cd;
        border: 1px solid #ffeeba;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
        color: #856404;
        text-align: center;
    }
    
    .emergency-form {
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
        width: 80%;
        margin: 20px auto;
        padding: 25px;
    }
    
    .form-label {
        display: block;
        font-weight: bold;
        margin-bottom: 8px;
        color: #333;
    }
    
    .form-input {
        width: 100%;
        padding: 12px;
        margin-bottom: 20px;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 1em;
    }
    
    .form-input:focus {
        border-color: #d9534f;
        outline: none;
        box-shadow: 0 0 5px rgba(217, 83, 79, 0.3);
    }
    
    #map-container {
        margin-bottom: 20px;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
    
    .map-help {
        text-align: center;
        font-size: 0.9em;
        color: #666;
        margin-top: 5px;
    }
    
    .geo-button {
        background-color: #5bc0de;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1em;
        width: 100%;
        margin-bottom: 20px;
    }
    
    .geo-button:hover {
        background-color: #46b8da;
    }
    
    .emergency-submit {
        background-color: #d9534f;
        color: white;
        border: none;
        padding: 12px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1.2em;
        width: 100%;
        margin-top: 10px;
        font-weight: bold;
    }
    
    .emergency-submit:hover {
        background-color: #c9302c;
    }
    
    @media (max-width: 768px) {
        .emergency-form {
            width: 95%;
            padding: 15px;
        }
        
        #map {
            height: 250px;
        }
    }
</style> 